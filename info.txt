Files Submitted : cubmodel.py   training.log    final_model_checkpoint.pth (On drive link: https://drive.google.com/file/d/1W-IQJNeQ3-aaFnb8JOSr8g5ip-a4PP5X/view?usp=sharing)
Directions To Training : Run "python3 combined.py --help" for help regarding input and hyperparameters tuning
Directions to Testing Trained Model : 
    Import the 'CUBModel' class from cubmodel.py file and do "model = CUBModel.load_model('./path/to/saved/model')" to load the model. 
    You can use the 'predict_from_image_path' function to predict output with image address as input
    You can use the 'predict_from_image_array' function to predict output with image's numpy array as input

Approach to problem : Fine tuned MobileNetV2 model of ImageNet over the given dataset (CUB_200_2011)
Used :
    'Early Stopping' and 'L2-Regularizer' for regularization
    'CrossEntropyLoss' for loss function
    'Transformers' for normalizing and data augmentation
    'SGD' optimizer with +ve momentum
Appended new layers at end of MobileNetV2 model and trained the newly appended layers (i.e. fine tuned it)
